// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIGreeter is a mock of IGreeter interface.
type MockIGreeter struct {
	ctrl     *gomock.Controller
	recorder *MockIGreeterMockRecorder
}

// MockIGreeterMockRecorder is the mock recorder for MockIGreeter.
type MockIGreeterMockRecorder struct {
	mock *MockIGreeter
}

// NewMockIGreeter creates a new mock instance.
func NewMockIGreeter(ctrl *gomock.Controller) *MockIGreeter {
	mock := &MockIGreeter{ctrl: ctrl}
	mock.recorder = &MockIGreeterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIGreeter) EXPECT() *MockIGreeterMockRecorder {
	return m.recorder
}

// Greet mocks base method.
func (m *MockIGreeter) Greet(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Greet", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Greet indicates an expected call of Greet.
func (mr *MockIGreeterMockRecorder) Greet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Greet", reflect.TypeOf((*MockIGreeter)(nil).Greet), arg0)
}
